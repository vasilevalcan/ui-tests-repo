{
	"info": {
		"_postman_id": "dd88f789-5dde-485f-94ef-64476a3898a1",
		"name": "Test suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26464234"
	},
	"item": [
		{
			"name": "New post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 131,\r\n    \"id\": 132,\r\n    \"title\": \"Lorem ipsum\",\r\n    \"body\": \"dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://my-json-server.typicode.com/vasilevalcan/api-repo/posts",
					"protocol": "https",
					"host": [
						"my-json-server",
						"typicode",
						"com"
					],
					"path": [
						"vasilevalcan",
						"api-repo",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Check that a user exists', function(){\r",
							"   pm.expect(pm.response.text()).to.include(\"Samantha\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Endpoints timeout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less \", function() {\r",
							"    var limit = 10;\r",
							"    pm.expect(pm.response.responseTime, \"Response time was longer than \" + limit + \" ms.\").to.be.below(limit);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1/comments",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1",
						"comments"
					]
				}
			},
			"response": []
		}
	]
}